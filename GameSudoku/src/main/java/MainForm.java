
import java.awt.Color;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ducng
 */
public class MainForm extends javax.swing.JFrame {
    private int point = 100;
    private int[][] mt = new int[9][9];
    final JFileChooser  fileDialog = new JFileChooser();
    Slove sl = new Slove();
    /** Creates new form MainForm */
    public MainForm() {
        initComponents();
        ButtonGroup bg = new ButtonGroup();
        bg.add(easy);
        bg.add(normal);
        bg.add(hard);
        bg.add(custom);
        setTitle("Sudoku Game");
        setLocation(300, 100);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        menuPanel = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        easy = new javax.swing.JRadioButton();
        normal = new javax.swing.JRadioButton();
        hard = new javax.swing.JRadioButton();
        savegame = new javax.swing.JButton();
        loadgame = new javax.swing.JButton();
        quit = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        check = new javax.swing.JButton();
        slove = new javax.swing.JButton();
        newgame = new javax.swing.JButton();
        time = new javax.swing.JLabel();
        ptime = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        custom = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        m11 = new javax.swing.JTextField();
        m12 = new javax.swing.JTextField();
        m13 = new javax.swing.JTextField();
        m16 = new javax.swing.JTextField();
        m14 = new javax.swing.JTextField();
        m15 = new javax.swing.JTextField();
        m19 = new javax.swing.JTextField();
        m17 = new javax.swing.JTextField();
        m18 = new javax.swing.JTextField();
        m23 = new javax.swing.JTextField();
        m26 = new javax.swing.JTextField();
        m24 = new javax.swing.JTextField();
        m25 = new javax.swing.JTextField();
        m21 = new javax.swing.JTextField();
        m29 = new javax.swing.JTextField();
        m27 = new javax.swing.JTextField();
        m28 = new javax.swing.JTextField();
        m22 = new javax.swing.JTextField();
        m33 = new javax.swing.JTextField();
        m36 = new javax.swing.JTextField();
        m34 = new javax.swing.JTextField();
        m35 = new javax.swing.JTextField();
        m31 = new javax.swing.JTextField();
        m39 = new javax.swing.JTextField();
        m37 = new javax.swing.JTextField();
        m38 = new javax.swing.JTextField();
        m32 = new javax.swing.JTextField();
        m69 = new javax.swing.JTextField();
        m67 = new javax.swing.JTextField();
        m68 = new javax.swing.JTextField();
        m62 = new javax.swing.JTextField();
        m43 = new javax.swing.JTextField();
        m46 = new javax.swing.JTextField();
        m44 = new javax.swing.JTextField();
        m45 = new javax.swing.JTextField();
        m41 = new javax.swing.JTextField();
        m49 = new javax.swing.JTextField();
        m47 = new javax.swing.JTextField();
        m48 = new javax.swing.JTextField();
        m53 = new javax.swing.JTextField();
        m56 = new javax.swing.JTextField();
        m54 = new javax.swing.JTextField();
        m55 = new javax.swing.JTextField();
        m51 = new javax.swing.JTextField();
        m63 = new javax.swing.JTextField();
        m59 = new javax.swing.JTextField();
        m66 = new javax.swing.JTextField();
        m57 = new javax.swing.JTextField();
        m64 = new javax.swing.JTextField();
        m58 = new javax.swing.JTextField();
        m65 = new javax.swing.JTextField();
        m52 = new javax.swing.JTextField();
        m61 = new javax.swing.JTextField();
        m42 = new javax.swing.JTextField();
        m99 = new javax.swing.JTextField();
        m97 = new javax.swing.JTextField();
        m98 = new javax.swing.JTextField();
        m92 = new javax.swing.JTextField();
        m73 = new javax.swing.JTextField();
        m76 = new javax.swing.JTextField();
        m74 = new javax.swing.JTextField();
        m75 = new javax.swing.JTextField();
        m71 = new javax.swing.JTextField();
        m79 = new javax.swing.JTextField();
        m77 = new javax.swing.JTextField();
        m78 = new javax.swing.JTextField();
        m83 = new javax.swing.JTextField();
        m86 = new javax.swing.JTextField();
        m84 = new javax.swing.JTextField();
        m85 = new javax.swing.JTextField();
        m81 = new javax.swing.JTextField();
        m93 = new javax.swing.JTextField();
        m89 = new javax.swing.JTextField();
        m96 = new javax.swing.JTextField();
        m87 = new javax.swing.JTextField();
        m94 = new javax.swing.JTextField();
        m88 = new javax.swing.JTextField();
        m95 = new javax.swing.JTextField();
        m82 = new javax.swing.JTextField();
        m91 = new javax.swing.JTextField();
        m72 = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        menuFIle = new javax.swing.JMenu();
        saveGame = new javax.swing.JMenuItem();
        loadGame = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        jTextField20.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField21.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField22.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField23.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField23.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField24.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField24.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField31.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField31.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField32.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField32.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField33.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField33.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField34.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jTextField34.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        menuPanel.setBackground(new java.awt.Color(229, 226, 209));

        name.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        name.setText("Sudoku Game");
        name.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        name.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        level.setBackground(new java.awt.Color(229, 226, 209));
        level.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        level.setText("Level: ");

        easy.setBackground(new java.awt.Color(229, 226, 209));
        easy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        easy.setText("Easy");
        easy.setBorder(null);

        normal.setBackground(new java.awt.Color(229, 226, 209));
        normal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        normal.setText("Normal");
        normal.setBorder(null);

        hard.setBackground(new java.awt.Color(229, 226, 209));
        hard.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        hard.setText("Hard");
        hard.setBorder(null);

        savegame.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        savegame.setText("Save Game");
        savegame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savegameMouseClicked(evt);
            }
        });

        loadgame.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        loadgame.setText("Load Game");
        loadgame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadgameMouseClicked(evt);
            }
        });

        quit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(16, 16, 16));

        check.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        slove.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        slove.setText("Slove");
        slove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sloveActionPerformed(evt);
            }
        });

        newgame.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newgame.setText("New Game");
        newgame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newgameActionPerformed(evt);
            }
        });

        time.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        time.setText("Time:");

        ptime.setEditable(false);
        ptime.setBackground(new java.awt.Color(229, 226, 209));
        ptime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ptime.setBorder(null);

        jSeparator2.setForeground(new java.awt.Color(16, 16, 16));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Point");

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(229, 226, 209));
        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField1.setBorder(null);

        custom.setBackground(new java.awt.Color(229, 226, 209));
        custom.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        custom.setText("Custom");
        custom.setBorder(null);

        org.jdesktop.layout.GroupLayout menuPanelLayout = new org.jdesktop.layout.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator2)
            .add(menuPanelLayout.createSequentialGroup()
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuPanelLayout.createSequentialGroup()
                        .add(157, 157, 157)
                        .add(logo)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(check, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(menuPanelLayout.createSequentialGroup()
                                .add(time)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(ptime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(menuPanelLayout.createSequentialGroup()
                                .add(32, 32, 32)
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField1))
                            .add(menuPanelLayout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(slove, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(15, 15, 15)))
                .addContainerGap())
            .add(menuPanelLayout.createSequentialGroup()
                .add(114, 114, 114)
                .add(name)
                .add(0, 0, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(menuPanelLayout.createSequentialGroup()
                        .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(menuPanelLayout.createSequentialGroup()
                                .add(level)
                                .add(26, 26, 26)
                                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(easy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(hard, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(newgame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(menuPanelLayout.createSequentialGroup()
                                .add(48, 48, 48)
                                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(custom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(normal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, menuPanelLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(savegame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(menuPanelLayout.createSequentialGroup()
                        .add(loadgame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(quit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(24, 24, 24))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(name, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(level)
                    .add(easy)
                    .add(normal))
                .add(16, 16, 16)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hard)
                    .add(custom))
                .add(18, 18, 18)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(newgame)
                    .add(savegame))
                .add(18, 18, 18)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(loadgame)
                    .add(quit))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(check)
                    .add(slove))
                .add(18, 18, 18)
                .add(menuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(time)
                    .add(ptime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(53, 53, 53)
                .add(logo)
                .add(226, 226, 226))
        );

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(492, 492));

        m11.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m11.setToolTipText("");
        m11.setActionCommand("<Not Set>");
        m11.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m11KeyTyped(evt);
            }
        });

        m12.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m12.setToolTipText("");
        m12.setActionCommand("<Not Set>");
        m12.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m12KeyTyped(evt);
            }
        });

        m13.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m13.setToolTipText("");
        m13.setActionCommand("<Not Set>");
        m13.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m13KeyTyped(evt);
            }
        });

        m16.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m16.setToolTipText("");
        m16.setActionCommand("<Not Set>");
        m16.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m16KeyTyped(evt);
            }
        });

        m14.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m14.setToolTipText("");
        m14.setActionCommand("<Not Set>");
        m14.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m14KeyTyped(evt);
            }
        });

        m15.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m15.setToolTipText("");
        m15.setActionCommand("<Not Set>");
        m15.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m15KeyTyped(evt);
            }
        });

        m19.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m19.setToolTipText("");
        m19.setActionCommand("<Not Set>");
        m19.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m19KeyTyped(evt);
            }
        });

        m17.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m17.setToolTipText("");
        m17.setActionCommand("<Not Set>");
        m17.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m17KeyTyped(evt);
            }
        });

        m18.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m18.setToolTipText("");
        m18.setActionCommand("<Not Set>");
        m18.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m18KeyTyped(evt);
            }
        });

        m23.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m23.setToolTipText("");
        m23.setActionCommand("<Not Set>");
        m23.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m23KeyTyped(evt);
            }
        });

        m26.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m26.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m26.setToolTipText("");
        m26.setActionCommand("<Not Set>");
        m26.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m26.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m26KeyTyped(evt);
            }
        });

        m24.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m24.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m24.setToolTipText("");
        m24.setActionCommand("<Not Set>");
        m24.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m24KeyTyped(evt);
            }
        });

        m25.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m25.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m25.setToolTipText("");
        m25.setActionCommand("<Not Set>");
        m25.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m25KeyTyped(evt);
            }
        });

        m21.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m21.setToolTipText("");
        m21.setActionCommand("<Not Set>");
        m21.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m21KeyTyped(evt);
            }
        });

        m29.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m29.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m29.setToolTipText("");
        m29.setActionCommand("<Not Set>");
        m29.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m29.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m29KeyTyped(evt);
            }
        });

        m27.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m27.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m27.setToolTipText("");
        m27.setActionCommand("<Not Set>");
        m27.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m27.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m27KeyTyped(evt);
            }
        });

        m28.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m28.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m28.setToolTipText("");
        m28.setActionCommand("<Not Set>");
        m28.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m28.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m28KeyTyped(evt);
            }
        });

        m22.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m22.setToolTipText("");
        m22.setActionCommand("<Not Set>");
        m22.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m22KeyTyped(evt);
            }
        });

        m33.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m33.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m33.setToolTipText("");
        m33.setActionCommand("<Not Set>");
        m33.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m33KeyTyped(evt);
            }
        });

        m36.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m36.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m36.setToolTipText("");
        m36.setActionCommand("<Not Set>");
        m36.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m36.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m36KeyTyped(evt);
            }
        });

        m34.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m34.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m34.setToolTipText("");
        m34.setActionCommand("<Not Set>");
        m34.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m34.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m34KeyTyped(evt);
            }
        });

        m35.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m35.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m35.setToolTipText("");
        m35.setActionCommand("<Not Set>");
        m35.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m35KeyTyped(evt);
            }
        });

        m31.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m31.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m31.setToolTipText("");
        m31.setActionCommand("<Not Set>");
        m31.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m31KeyTyped(evt);
            }
        });

        m39.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m39.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m39.setToolTipText("");
        m39.setActionCommand("<Not Set>");
        m39.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m39.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m39KeyTyped(evt);
            }
        });

        m37.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m37.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m37.setToolTipText("");
        m37.setActionCommand("<Not Set>");
        m37.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m37KeyTyped(evt);
            }
        });

        m38.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m38.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m38.setToolTipText("");
        m38.setActionCommand("<Not Set>");
        m38.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m38KeyTyped(evt);
            }
        });

        m32.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m32.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m32.setToolTipText("");
        m32.setActionCommand("<Not Set>");
        m32.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m32KeyTyped(evt);
            }
        });

        m69.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m69.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m69.setToolTipText("");
        m69.setActionCommand("<Not Set>");
        m69.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m69.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m69KeyTyped(evt);
            }
        });

        m67.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m67.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m67.setToolTipText("");
        m67.setActionCommand("<Not Set>");
        m67.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m67.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m67KeyTyped(evt);
            }
        });

        m68.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m68.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m68.setToolTipText("");
        m68.setActionCommand("<Not Set>");
        m68.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m68KeyTyped(evt);
            }
        });

        m62.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m62.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m62.setToolTipText("");
        m62.setActionCommand("<Not Set>");
        m62.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m62.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m62KeyTyped(evt);
            }
        });

        m43.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m43.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m43.setToolTipText("");
        m43.setActionCommand("<Not Set>");
        m43.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m43.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m43KeyTyped(evt);
            }
        });

        m46.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m46.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m46.setToolTipText("");
        m46.setActionCommand("<Not Set>");
        m46.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m46.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m46KeyTyped(evt);
            }
        });

        m44.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m44.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m44.setToolTipText("");
        m44.setActionCommand("<Not Set>");
        m44.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m44.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m44KeyTyped(evt);
            }
        });

        m45.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m45.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m45.setToolTipText("");
        m45.setActionCommand("<Not Set>");
        m45.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m45KeyTyped(evt);
            }
        });

        m41.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m41.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m41.setToolTipText("");
        m41.setActionCommand("<Not Set>");
        m41.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m41.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m41KeyTyped(evt);
            }
        });

        m49.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m49.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m49.setToolTipText("");
        m49.setActionCommand("<Not Set>");
        m49.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m49.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m49KeyTyped(evt);
            }
        });

        m47.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m47.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m47.setToolTipText("");
        m47.setActionCommand("<Not Set>");
        m47.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m47.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m47KeyTyped(evt);
            }
        });

        m48.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m48.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m48.setToolTipText("");
        m48.setActionCommand("<Not Set>");
        m48.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m48.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m48KeyTyped(evt);
            }
        });

        m53.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m53.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m53.setToolTipText("");
        m53.setActionCommand("<Not Set>");
        m53.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m53.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m53KeyTyped(evt);
            }
        });

        m56.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m56.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m56.setToolTipText("");
        m56.setActionCommand("<Not Set>");
        m56.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m56KeyTyped(evt);
            }
        });

        m54.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m54.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m54.setToolTipText("");
        m54.setActionCommand("<Not Set>");
        m54.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m54.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m54KeyTyped(evt);
            }
        });

        m55.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m55.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m55.setToolTipText("");
        m55.setActionCommand("<Not Set>");
        m55.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m55KeyTyped(evt);
            }
        });

        m51.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m51.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m51.setToolTipText("");
        m51.setActionCommand("<Not Set>");
        m51.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m51.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m51KeyTyped(evt);
            }
        });

        m63.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m63.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m63.setToolTipText("");
        m63.setActionCommand("<Not Set>");
        m63.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m63KeyTyped(evt);
            }
        });

        m59.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m59.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m59.setToolTipText("");
        m59.setActionCommand("<Not Set>");
        m59.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m59.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m59KeyTyped(evt);
            }
        });

        m66.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m66.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m66.setToolTipText("");
        m66.setActionCommand("<Not Set>");
        m66.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m66KeyTyped(evt);
            }
        });

        m57.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m57.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m57.setToolTipText("");
        m57.setActionCommand("<Not Set>");
        m57.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m57KeyTyped(evt);
            }
        });

        m64.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m64.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m64.setToolTipText("");
        m64.setActionCommand("<Not Set>");
        m64.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m64KeyTyped(evt);
            }
        });

        m58.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m58.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m58.setToolTipText("");
        m58.setActionCommand("<Not Set>");
        m58.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m58.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m58KeyTyped(evt);
            }
        });

        m65.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m65.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m65.setToolTipText("");
        m65.setActionCommand("<Not Set>");
        m65.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m65KeyTyped(evt);
            }
        });

        m52.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m52.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m52.setToolTipText("");
        m52.setActionCommand("<Not Set>");
        m52.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m52.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m52KeyTyped(evt);
            }
        });

        m61.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m61.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m61.setToolTipText("");
        m61.setActionCommand("<Not Set>");
        m61.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m61.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m61KeyTyped(evt);
            }
        });

        m42.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m42.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m42.setToolTipText("");
        m42.setActionCommand("<Not Set>");
        m42.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m42.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m42KeyTyped(evt);
            }
        });

        m99.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m99.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m99.setToolTipText("");
        m99.setActionCommand("<Not Set>");
        m99.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m99.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m99KeyTyped(evt);
            }
        });

        m97.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m97.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m97.setToolTipText("");
        m97.setActionCommand("<Not Set>");
        m97.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m97.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m97KeyTyped(evt);
            }
        });

        m98.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m98.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m98.setToolTipText("");
        m98.setActionCommand("<Not Set>");
        m98.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m98.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m98KeyTyped(evt);
            }
        });

        m92.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m92.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m92.setToolTipText("");
        m92.setActionCommand("<Not Set>");
        m92.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m92.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m92KeyTyped(evt);
            }
        });

        m73.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m73.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m73.setToolTipText("");
        m73.setActionCommand("<Not Set>");
        m73.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m73KeyTyped(evt);
            }
        });

        m76.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m76.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m76.setToolTipText("");
        m76.setActionCommand("<Not Set>");
        m76.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m76KeyTyped(evt);
            }
        });

        m74.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m74.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m74.setToolTipText("");
        m74.setActionCommand("<Not Set>");
        m74.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m74KeyTyped(evt);
            }
        });

        m75.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m75.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m75.setToolTipText("");
        m75.setActionCommand("<Not Set>");
        m75.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m75KeyTyped(evt);
            }
        });

        m71.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m71.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m71.setToolTipText("");
        m71.setActionCommand("<Not Set>");
        m71.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m71KeyTyped(evt);
            }
        });

        m79.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m79.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m79.setToolTipText("");
        m79.setActionCommand("<Not Set>");
        m79.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m79.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m79KeyTyped(evt);
            }
        });

        m77.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m77.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m77.setToolTipText("");
        m77.setActionCommand("<Not Set>");
        m77.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m77KeyTyped(evt);
            }
        });

        m78.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m78.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m78.setToolTipText("");
        m78.setActionCommand("<Not Set>");
        m78.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m78KeyTyped(evt);
            }
        });

        m83.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m83.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m83.setToolTipText("");
        m83.setActionCommand("<Not Set>");
        m83.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m83.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m83KeyTyped(evt);
            }
        });

        m86.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m86.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m86.setToolTipText("");
        m86.setActionCommand("<Not Set>");
        m86.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m86KeyTyped(evt);
            }
        });

        m84.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m84.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m84.setToolTipText("");
        m84.setActionCommand("<Not Set>");
        m84.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m84KeyTyped(evt);
            }
        });

        m85.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m85.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m85.setToolTipText("");
        m85.setActionCommand("<Not Set>");
        m85.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m85KeyTyped(evt);
            }
        });

        m81.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m81.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m81.setToolTipText("");
        m81.setActionCommand("<Not Set>");
        m81.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m81KeyTyped(evt);
            }
        });

        m93.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m93.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m93.setToolTipText("");
        m93.setActionCommand("<Not Set>");
        m93.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m93.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m93KeyTyped(evt);
            }
        });

        m89.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m89.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m89.setToolTipText("");
        m89.setActionCommand("<Not Set>");
        m89.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m89.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m89KeyTyped(evt);
            }
        });

        m96.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m96.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m96.setToolTipText("");
        m96.setActionCommand("<Not Set>");
        m96.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m96.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m96KeyTyped(evt);
            }
        });

        m87.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m87.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m87.setToolTipText("");
        m87.setActionCommand("<Not Set>");
        m87.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m87KeyTyped(evt);
            }
        });

        m94.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m94.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m94.setToolTipText("");
        m94.setActionCommand("<Not Set>");
        m94.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m94.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m94KeyTyped(evt);
            }
        });

        m88.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m88.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m88.setToolTipText("");
        m88.setActionCommand("<Not Set>");
        m88.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m88.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m88KeyTyped(evt);
            }
        });

        m95.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m95.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m95.setToolTipText("");
        m95.setActionCommand("<Not Set>");
        m95.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m95.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m95KeyTyped(evt);
            }
        });

        m82.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m82.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m82.setToolTipText("");
        m82.setActionCommand("<Not Set>");
        m82.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m82KeyTyped(evt);
            }
        });

        m91.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m91.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m91.setToolTipText("");
        m91.setActionCommand("<Not Set>");
        m91.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m91.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m91KeyTyped(evt);
            }
        });

        m72.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        m72.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        m72.setToolTipText("");
        m72.setActionCommand("<Not Set>");
        m72.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        m72.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m72KeyTyped(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(m61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(m67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)
                        .add(m69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuFIle.setText("File");
        menuFIle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        menuFIle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuFIleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuFIleMouseEntered(evt);
            }
        });

        saveGame.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        saveGame.setText("Save game");
        saveGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveGameMouseClicked(evt);
            }
        });
        menuFIle.add(saveGame);

        loadGame.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        loadGame.setText("Load game");
        loadGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadGameMouseClicked(evt);
            }
        });
        menuFIle.add(loadGame);

        exit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        menuFIle.add(exit);

        menuBar.add(menuFIle);

        help.setText("Help");
        help.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        about.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        about.setText("About");
        help.add(about);

        menuBar.add(help);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 500, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(menuPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 308, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(menuPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 531, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 501, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadgameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadgameMouseClicked
        // TODO add your handling code here:
        SaveGame s = new SaveGame();
        int returnVal = fileDialog.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            java.io.File file = fileDialog.getSelectedFile();
            try {
                mt = s.readFile(fileDialog.getCurrentDirectory().toString()+"\\"+file.getName());
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            point = 100;
            drawMatrix(mt);
            }   
    }//GEN-LAST:event_loadgameMouseClicked
    
private JTextField[][] setBox(){
        JTextField[][] boxNumber = {{m11,m12,m13,m14,m15,m16,m17,m18,m19},
                                    {m21,m22,m23,m24,m25,m26,m27,m28,m29},
                                    {m31,m32,m33,m34,m35,m36,m37,m38,m39},
                                    {m41,m42,m43,m44,m45,m46,m47,m48,m49},
                                    {m51,m52,m53,m54,m55,m56,m57,m58,m59},
                                    {m61,m62,m63,m64,m65,m66,m67,m68,m69},
                                    {m71,m72,m73,m74,m75,m76,m77,m78,m79},
                                    {m81,m82,m83,m84,m85,m86,m87,m88,m89},
                                    {m91,m92,m93,m94,m95,m96,m97,m98,m99}};
        return boxNumber;
    }     
   
    private void drawMatrix(int[][] matrix){
        jTextField1.setText(String.valueOf(point));
        JTextField[][] boxNumber = setBox();
        for(int i = 0;i<9;i++){
            for(int j = 0;j<9;j++){
                if(matrix[i][j]==0){
                    boxNumber[i][j].setText("");
                    boxNumber[i][j].setBackground(Color.white);
                    boxNumber[i][j].setEditable(true);
                }
                else if(matrix[i][j]>=10){
                    matrix[i][j] /= 10;
                    boxNumber[i][j].setText(String.valueOf(matrix[i][j]));
                    boxNumber[i][j].setBackground(Color.white);
                    boxNumber[i][j].setEditable(true);
                }
                else{
                    boxNumber[i][j].setText(String.valueOf(matrix[i][j]));
                    boxNumber[i][j].setBackground(Color.LIGHT_GRAY);
                    boxNumber[i][j].setEditable(false);
                }
            }
        }
    }
    
    private int[][] getMatrix(){
        int[][] matrix = new int[9][9];
        jTextField1.setText(String.valueOf(point));
        JTextField[][] boxNumber = setBox();
        for(int i = 0;i<9;i++){
            for(int j = 0;j<9;j++){
                if(boxNumber[i][j].getText().equals(""))
                    matrix[i][j] = 0;
                else if(Integer.parseInt(boxNumber[i][j].getText())>=1&&Integer.parseInt(boxNumber[i][j].getText())<=9)
                    matrix[i][j] = Integer.parseInt(boxNumber[i][j].getText());            
            }
        }
        return matrix;
    }
    
    private void checkMatrix(int[][] matrix,int[][] newMT){
        JTextField[][] boxNumber = setBox();
        for(int i = 0;i<9;i++){
            for(int j = 0;j<9;j++){
                if(matrix[i][j]==0){
                    if(sl.isSafe(matrix,i,j,newMT[i][j]))
                        boxNumber[i][j].setBackground(Color.green);
                    else
                        boxNumber[i][j].setBackground(Color.red);}
            }
        }
    }
    
    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quitActionPerformed

    private void newgameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newgameActionPerformed
        importMap map = null;
        point = 100;
        if (!easy.isSelected() && !normal.isSelected() && !hard.isSelected()&&!custom.isSelected()) {
            JOptionPane.showMessageDialog(this,"Hãy chọn chế độ chơi !");
        }
        else if(custom.isSelected()){
            for(int i = 0;i<9;i++){
                for(int j = 0;j<9;j++){
                    mt[i][j]=0;
            }
        }
            drawMatrix(mt);
        }
        else {
            if(easy.isSelected())
                map = new importMap(1);
            else if(normal.isSelected())
                map = new importMap(2);
            else if (hard.isSelected()) {
                map = new importMap(3);
            }
            try {
                mt = map.readMatrix();
            } catch (IOException ex) {
                //Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            drawMatrix(mt);
        }
    }//GEN-LAST:event_newgameActionPerformed
    private void savegameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savegameMouseClicked
        // TODO add your handling code here:
        if(custom.isSelected()){
            if(!checkCustom()){
                JOptionPane.showMessageDialog(this,"Ma trận này không có lời giải !");
            }
            else{
                int[][] newMatrix = new int[9][9];
                newMatrix = getMatrix();
                JTextField[][] boxNumber = setBox();
                SaveGame s = new SaveGame();
                int returnVal = fileDialog.showSaveDialog(null);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    java.io.File file = fileDialog.getSelectedFile();
                    try {
                        s.creatFile(fileDialog.getCurrentDirectory().toString(), file.getName(), newMatrix);
                        JOptionPane.showMessageDialog(this,"Đã lưu !");
                    } catch (IOException ex) {
                        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }}
        }
        else {
            int[][] newMatrix = new int[9][9];
            newMatrix = getMatrix();
            JTextField[][] boxNumber = setBox();
            for(int i = 0;i<9;i++){
                for(int j = 0;j<9;j++){
                    if(boxNumber[i][j].isEditable())
                        newMatrix[i][j]*=10;
                }
            }
            SaveGame s = new SaveGame();
            int returnVal = fileDialog.showSaveDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                java.io.File file = fileDialog.getSelectedFile();
                try {
                    s.creatFile(fileDialog.getCurrentDirectory().toString(), file.getName(), newMatrix);
                    JOptionPane.showMessageDialog(this,"Đã lưu !");
                } catch (IOException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            } } 
        
    }//GEN-LAST:event_savegameMouseClicked

    private void menuFIleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuFIleMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menuFIleMouseClicked

    private void loadGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadGameMouseClicked
        // TODO add your handling code here:
        SaveGame s = new SaveGame();
        int returnVal = fileDialog.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            java.io.File file = fileDialog.getSelectedFile();
            try {
                mt = s.readFile(fileDialog.getCurrentDirectory().toString()+"\\"+file.getName());
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            point = 100;
            drawMatrix(mt);
            }   
    }//GEN-LAST:event_loadGameMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void saveGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveGameMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_saveGameMouseClicked

    private void menuFIleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuFIleMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_menuFIleMouseEntered
    private boolean checkCustom(){
        mt = getMatrix();
        Slove s = new Slove();
        if(s.isSafe(mt))
            return true;
        return false;
    }
    private int getcheck(){
        JTextField[][] boxNumber = setBox();
        for(int i = 0;i<9;i++){
                for(int j = 0;j<9;j++){
                    if(boxNumber[i][j].isEditable())
                        if(boxNumber[i][j].getBackground() == Color.RED)
                            return 0;
                }
            }
        return 1;
    }
    
    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
        if(point > 0){
            int[][] newMT = new int[9][9];
            newMT = getMatrix();
            checkMatrix(mt,newMT);
            int check = getcheck();
            if(check == 0){
                point -= 5;
                jTextField1.setText(String.valueOf(point));}
            else
                JOptionPane.showMessageDialog(this,"YOU WIN !!!!");
    }
        else
            JOptionPane.showMessageDialog(this,"Đã hết lượt check. Bạn còn 0 điểm!");
    }//GEN-LAST:event_checkActionPerformed

    private void m99KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m99KeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
            if (m99.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                    && (caracter != '\b')) {
                evt.consume();
           }
    }//GEN-LAST:event_m99KeyTyped


    //sửa ở đây
    
    private void sloveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sloveActionPerformed
        // TODO add your handling code here:b  
        JTextField[][] boxNumber = setBox();
        for(int i = 0;i<9;i++){
                for(int j = 0;j<9;j++){
                    if(boxNumber[i][j].isEditable())
                        mt[i][j]=0;
                }
        }
        sl.setAns(mt);
        sl.sloveSudoku();
        int[][] ans = new int[9][9];
        ans = sl.getAns();
        for(int i = 0;i<9;i++){
            for(int j = 0;j<9;j++){
                boxNumber[i][j].setText(String.valueOf(ans[i][j]));
                boxNumber[i][j].setBackground(Color.LIGHT_GRAY);
                boxNumber[i][j].setEditable(false);
            }
        }
        jTextField1.setText(String.valueOf("0"));
    }//GEN-LAST:event_sloveActionPerformed

    private void m11KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m11.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m12KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m12.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m13KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m13.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m14KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m14.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m15KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m15.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m16KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m16.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m17KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m17.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m18KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m18.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m19KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m19.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m21KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m21.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m22KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m22.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m23KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m23.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m24KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m24.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m25KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m25.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m26KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m26.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m27KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m27.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m28KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m28.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m29KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m29.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m31KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m31.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m32KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m32.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m33KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m33.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m34KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m34.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m35KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m35.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m36KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m36.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m37KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m37.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m38KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m38.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m39KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m39.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m41KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m41.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m42KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m42.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m43KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m43.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m44KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m44.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m45KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m45.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m46KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m46.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m47KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m47.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m48KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m48.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m49KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m49.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m51KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m51.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m52KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m52.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m53KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m53.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m54KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m54.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m55KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m55.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m56KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m56.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m57KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m57.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m58KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m58.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m59KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m59.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m61KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m61.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m62KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m62.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m63KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m63.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m64KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m64.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m65KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m65.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m66KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m66.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m67KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m67.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m68KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m68.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m69KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m69.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m71KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m71.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m72KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m72.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m73KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m73.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m74KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m74.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m75KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m75.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m76KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m76.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m77KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m77.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m78KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m78.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m79KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m79.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m81KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m81.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m82KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m82.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m83KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m83.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m84KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m84.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m85KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m85.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m86KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m86.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m87KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m87.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m88KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m88.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m89KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m89.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m91KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m91.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m92KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m92.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m93KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m93.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m94KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m94.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m95KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m95.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m96KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m96.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m97KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m97.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }
    private void m98KeyTyped(java.awt.event.KeyEvent evt) {
        char caracter = evt.getKeyChar();
        if (m98.getText().length() > 0 || ((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton check;
    private javax.swing.JRadioButton custom;
    private javax.swing.JRadioButton easy;
    private javax.swing.JMenuItem exit;
    private javax.swing.JRadioButton hard;
    private javax.swing.JMenu help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JLabel level;
    private javax.swing.JMenuItem loadGame;
    private javax.swing.JButton loadgame;
    private javax.swing.JLabel logo;
    private javax.swing.JTextField m11;
    private javax.swing.JTextField m12;
    private javax.swing.JTextField m13;
    private javax.swing.JTextField m14;
    private javax.swing.JTextField m15;
    private javax.swing.JTextField m16;
    private javax.swing.JTextField m17;
    private javax.swing.JTextField m18;
    private javax.swing.JTextField m19;
    private javax.swing.JTextField m21;
    private javax.swing.JTextField m22;
    private javax.swing.JTextField m23;
    private javax.swing.JTextField m24;
    private javax.swing.JTextField m25;
    private javax.swing.JTextField m26;
    private javax.swing.JTextField m27;
    private javax.swing.JTextField m28;
    private javax.swing.JTextField m29;
    private javax.swing.JTextField m31;
    private javax.swing.JTextField m32;
    private javax.swing.JTextField m33;
    private javax.swing.JTextField m34;
    private javax.swing.JTextField m35;
    private javax.swing.JTextField m36;
    private javax.swing.JTextField m37;
    private javax.swing.JTextField m38;
    private javax.swing.JTextField m39;
    private javax.swing.JTextField m41;
    private javax.swing.JTextField m42;
    private javax.swing.JTextField m43;
    private javax.swing.JTextField m44;
    private javax.swing.JTextField m45;
    private javax.swing.JTextField m46;
    private javax.swing.JTextField m47;
    private javax.swing.JTextField m48;
    private javax.swing.JTextField m49;
    private javax.swing.JTextField m51;
    private javax.swing.JTextField m52;
    private javax.swing.JTextField m53;
    private javax.swing.JTextField m54;
    private javax.swing.JTextField m55;
    private javax.swing.JTextField m56;
    private javax.swing.JTextField m57;
    private javax.swing.JTextField m58;
    private javax.swing.JTextField m59;
    private javax.swing.JTextField m61;
    private javax.swing.JTextField m62;
    private javax.swing.JTextField m63;
    private javax.swing.JTextField m64;
    private javax.swing.JTextField m65;
    private javax.swing.JTextField m66;
    private javax.swing.JTextField m67;
    private javax.swing.JTextField m68;
    private javax.swing.JTextField m69;
    private javax.swing.JTextField m71;
    private javax.swing.JTextField m72;
    private javax.swing.JTextField m73;
    private javax.swing.JTextField m74;
    private javax.swing.JTextField m75;
    private javax.swing.JTextField m76;
    private javax.swing.JTextField m77;
    private javax.swing.JTextField m78;
    private javax.swing.JTextField m79;
    private javax.swing.JTextField m81;
    private javax.swing.JTextField m82;
    private javax.swing.JTextField m83;
    private javax.swing.JTextField m84;
    private javax.swing.JTextField m85;
    private javax.swing.JTextField m86;
    private javax.swing.JTextField m87;
    private javax.swing.JTextField m88;
    private javax.swing.JTextField m89;
    private javax.swing.JTextField m91;
    private javax.swing.JTextField m92;
    private javax.swing.JTextField m93;
    private javax.swing.JTextField m94;
    private javax.swing.JTextField m95;
    private javax.swing.JTextField m96;
    private javax.swing.JTextField m97;
    private javax.swing.JTextField m98;
    private javax.swing.JTextField m99;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFIle;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel name;
    private javax.swing.JButton newgame;
    private javax.swing.JRadioButton normal;
    private javax.swing.JTextField ptime;
    private javax.swing.JButton quit;
    private javax.swing.JMenuItem saveGame;
    private javax.swing.JButton savegame;
    private javax.swing.JButton slove;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables

}
